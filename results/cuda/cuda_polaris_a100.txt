[ Info: Using JACC backend: cuda
[ Info: Using JACC backend: cuda
┌ Warning: CUDA runtime library libcublasLt.so.11 was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
┌ Warning: CUDA runtime library libnvrtc.so was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
┌ Warning: CUDA runtime library libcublasLt.so.11 was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
┌ Warning: CUDA runtime library libnvrtc.so was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
[ Info: Using JACC backend: cuda
┌ Warning: CUDA runtime library libcublasLt.so.11 was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
┌ Warning: CUDA runtime library libnvrtc.so was loaded from a system path. This may cause errors.
│ Ensure that you have not set the LD_LIBRARY_PATH environment variable, or that it does not contain paths to CUDA libraries.
└ @ CUDA /lus/eagle/projects/AIPower/julia_depot/packages/CUDA/htRwP/src/initialization.jl:187
[ Info: Using JACC backend: cuda
axpy 1d 10
  10.309 μs (2 allocations: 128 bytes)
axpy 1d 100
  10.330 μs (2 allocations: 128 bytes)
axpy 1d 1000
  10.720 μs (2 allocations: 128 bytes)
axpy 1d 10000
  10.760 μs (2 allocations: 128 bytes)
axpy 1d 100000
  11.361 μs (2 allocations: 128 bytes)
axpy 1d 1000000
  14.377 μs (2 allocations: 128 bytes)
axpy 1d 10000000
  188.734 μs (3 allocations: 144 bytes)
axpy 1d 100000000
  1.770 ms (3 allocations: 144 bytes)
axpy 1d jacc 10
  11.912 μs (23 allocations: 864 bytes)
axpy 1d jacc 100
  11.882 μs (23 allocations: 864 bytes)
axpy 1d jacc 1000
  12.383 μs (24 allocations: 880 bytes)
axpy 1d jacc 10000
  12.383 μs (24 allocations: 880 bytes)
axpy 1d jacc 100000
  13.054 μs (24 allocations: 880 bytes)
axpy 1d jacc 1000000
  16.040 μs (24 allocations: 880 bytes)
axpy 1d jacc 10000000
  190.327 μs (25 allocations: 896 bytes)
axpy 1d jacc 100000000
  1.770 ms (25 allocations: 896 bytes)
dot 1d 10
  30.457 μs (28 allocations: 1.09 KiB)
dot 1d 100
  30.557 μs (28 allocations: 1.09 KiB)
dot 1d 1000
  28.844 μs (28 allocations: 1.09 KiB)
dot 1d 10000
  29.134 μs (28 allocations: 1.09 KiB)
dot 1d 100000
  29.956 μs (28 allocations: 1.09 KiB)
dot 1d 1000000
  38.052 μs (28 allocations: 1.09 KiB)
dot 1d 10000000
  144.912 μs (28 allocations: 1.09 KiB)
dot 1d 100000000
  1.173 ms (29 allocations: 1.11 KiB)
dot 1d jacc 10
  34.735 μs (56 allocations: 2.48 KiB)
dot 1d jacc 100
  34.916 μs (56 allocations: 2.48 KiB)
dot 1d jacc 1000
  35.657 μs (66 allocations: 2.64 KiB)
dot 1d jacc 10000
  35.025 μs (66 allocations: 2.64 KiB)
dot 1d jacc 100000
  36.258 μs (66 allocations: 2.64 KiB)
dot 1d jacc 1000000
  42.800 μs (66 allocations: 2.64 KiB)
dot 1d jacc 10000000
  147.857 μs (66 allocations: 2.64 KiB)
dot 1d jacc 100000000
  1.175 ms (67 allocations: 2.66 KiB)
axpy 2d 1000
  14.568 μs (2 allocations: 128 bytes)
axpy 2d 2000
  84.639 μs (2 allocations: 128 bytes)
axpy 2d 3000
  179.837 μs (3 allocations: 144 bytes)
axpy 2d 4000
  308.558 μs (3 allocations: 144 bytes)
axpy 2d 5000
  474.079 μs (3 allocations: 144 bytes)
axpy 2d 6000
  667.490 μs (3 allocations: 144 bytes)
axpy 2d 7000
  895.777 μs (3 allocations: 144 bytes)
axpy 2d 8000
  1.148 ms (3 allocations: 144 bytes)
axpy 2d 9000
  1.438 ms (3 allocations: 144 bytes)
axpy 2d 10000
  1.750 ms (3 allocations: 144 bytes)
axpy jacc 2d 1000
  69.079 μs (24 allocations: 976 bytes)
axpy jacc 2d 2000
  235.191 μs (25 allocations: 992 bytes)
axpy jacc 2d 3000
  490.208 μs (25 allocations: 992 bytes)
axpy jacc 2d 4000
  823.553 μs (25 allocations: 992 bytes)
axpy jacc 2d 5000
  1.235 ms (25 allocations: 992 bytes)
axpy jacc 2d 6000
  1.720 ms (25 allocations: 992 bytes)
axpy jacc 2d 7000
  2.284 ms (25 allocations: 992 bytes)
axpy jacc 2d 8000
  2.921 ms (25 allocations: 992 bytes)
axpy jacc 2d 9000
  3.660 ms (25 allocations: 992 bytes)
axpy jacc 2d 10000
  4.476 ms (25 allocations: 992 bytes)
dot 2d 1000
  65.463 μs (28 allocations: 1.09 KiB)
dot 2d 2000
  182.612 μs (28 allocations: 1.09 KiB)
dot 2d 3000
  385.242 μs (29 allocations: 1.11 KiB)
dot 2d 4000
  661.080 μs (29 allocations: 1.11 KiB)
dot 2d 5000
  1.010 ms (30 allocations: 1.12 KiB)
dot 2d 6000
  1.431 ms (30 allocations: 1.12 KiB)
dot 2d 7000
  1.937 ms (30 allocations: 1.12 KiB)
dot 2d 8000
  2.519 ms (30 allocations: 1.12 KiB)
dot 2d 9000
  3.184 ms (30 allocations: 1.12 KiB)
dot 2d 10000
  3.916 ms (30 allocations: 1.12 KiB)
dot jacc 2d 1000
  70.151 μs (68 allocations: 3.02 KiB)
dot jacc 2d 2000
  186.650 μs (68 allocations: 3.02 KiB)
dot jacc 2d 3000
  389.379 μs (69 allocations: 3.03 KiB)
dot jacc 2d 4000
  663.473 μs (70 allocations: 3.05 KiB)
dot jacc 2d 5000
  1.015 ms (70 allocations: 3.05 KiB)
dot jacc 2d 6000
  1.436 ms (70 allocations: 3.05 KiB)
dot jacc 2d 7000
  1.941 ms (70 allocations: 3.05 KiB)
dot jacc 2d 8000
  2.523 ms (70 allocations: 3.05 KiB)
dot jacc 2d 9000
  3.187 ms (70 allocations: 3.05 KiB)
dot jacc 2d 10000
  3.919 ms (70 allocations: 3.05 KiB)
lbm 100
  22.312 μs (2 allocations: 160 bytes)
lbm 200
  27.422 μs (2 allocations: 160 bytes)
lbm 300
  49.993 μs (2 allocations: 160 bytes)
lbm 400
  72.065 μs (2 allocations: 160 bytes)
lbm 500
  123.111 μs (2 allocations: 160 bytes)
lbm 600
  166.001 μs (3 allocations: 176 bytes)
lbm 700
  211.346 μs (3 allocations: 176 bytes)
lbm 800
  269.174 μs (3 allocations: 176 bytes)
lbm 900
  341.630 μs (3 allocations: 176 bytes)
lbm 1000
  405.851 μs (3 allocations: 176 bytes)
lbm jacc 100
  23.945 μs (35 allocations: 1.59 KiB)
lbm jacc 200
  33.583 μs (35 allocations: 1.59 KiB)
lbm jacc 300
  62.808 μs (35 allocations: 1.59 KiB)
lbm jacc 400
  98.454 μs (35 allocations: 1.59 KiB)
lbm jacc 500
  155.161 μs (35 allocations: 1.59 KiB)
lbm jacc 600
  210.094 μs (36 allocations: 1.61 KiB)
lbm jacc 700
  274.554 μs (36 allocations: 1.61 KiB)
lbm jacc 800
  346.799 μs (36 allocations: 1.61 KiB)
lbm jacc 900
  442.980 μs (36 allocations: 1.61 KiB)
lbm jacc 1000
  529.412 μs (36 allocations: 1.61 KiB)
cg
  19.664 ms (218 allocations: 8.44 KiB)
cg jacc
  33.360 ms (492 allocations: 19.30 KiB)
